<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtwy.mapper.OrdersMapper" >
  <resultMap id="BaseResultMap" type="com.xtwy.bean.Orders" >
    <id column="ordersId" property="ordersid" jdbcType="INTEGER" />
    <result column="ordersNum" property="ordersnum" jdbcType="VARCHAR" />
    <result column="memberId" property="memberid" jdbcType="INTEGER" />
    <result column="total" property="total" jdbcType="DECIMAL" />
    <result column="Orderdate" property="orderdate" jdbcType="TIMESTAMP" />
    <result column="delivery" property="delivery" jdbcType="INTEGER" />
    <result column="payment" property="payment" jdbcType="INTEGER" />
    <result column="orderstatus" property="orderstatus" jdbcType="INTEGER" />
    <result column="paymentstatus" property="paymentstatus" jdbcType="INTEGER" />
    <result column="deliverystatus" property="deliverystatus" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ordersId, ordersNum, memberId, total, Orderdate, delivery, payment, orderstatus, 
    paymentstatus, deliverystatus, remark
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where ordersId = #{ordersid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from orders
    where ordersId = #{ordersid,jdbcType=INTEGER}
  </delete>
 
  <insert id="insert" parameterType="com.xtwy.bean.Orders" >
    insert into orders (ordersId, ordersNum, memberId, 
      total, Orderdate, delivery, 
      payment, orderstatus, paymentstatus, 
      deliverystatus, remark)
    values (#{ordersid,jdbcType=INTEGER}, #{ordersnum,jdbcType=VARCHAR}, #{memberid,jdbcType=INTEGER}, 
      #{total,jdbcType=DECIMAL}, #{orderdate,jdbcType=TIMESTAMP}, #{delivery,jdbcType=INTEGER}, 
      #{payment,jdbcType=INTEGER}, #{orderstatus,jdbcType=INTEGER}, #{paymentstatus,jdbcType=INTEGER}, 
      #{deliverystatus,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xtwy.bean.Orders" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ordersid != null" >
        ordersId,
      </if>
      <if test="ordersnum != null" >
        ordersNum,
      </if>
      <if test="memberid != null" >
        memberId,
      </if>
      <if test="total != null" >
        total,
      </if>
      <if test="orderdate != null" >
        Orderdate,
      </if>
      <if test="delivery != null" >
        delivery,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="orderstatus != null" >
        orderstatus,
      </if>
      <if test="paymentstatus != null" >
        paymentstatus,
      </if>
      <if test="deliverystatus != null" >
        deliverystatus,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ordersid != null" >
        #{ordersid,jdbcType=INTEGER},
      </if>
      <if test="ordersnum != null" >
        #{ordersnum,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        #{memberid,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        #{total,jdbcType=DECIMAL},
      </if>
      <if test="orderdate != null" >
        #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="delivery != null" >
        #{delivery,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="paymentstatus != null" >
        #{paymentstatus,jdbcType=INTEGER},
      </if>
      <if test="deliverystatus != null" >
        #{deliverystatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
 
  <update id="updateByPrimaryKeySelective" parameterType="com.xtwy.bean.Orders" >
    update orders
    <set >
      <if test="ordersnum != null" >
        ordersNum = #{ordersnum,jdbcType=VARCHAR},
      </if>
      <if test="memberid != null" >
        memberId = #{memberid,jdbcType=INTEGER},
      </if>
      <if test="total != null" >
        total = #{total,jdbcType=DECIMAL},
      </if>
      <if test="orderdate != null" >
        Orderdate = #{orderdate,jdbcType=TIMESTAMP},
      </if>
      <if test="delivery != null" >
        delivery = #{delivery,jdbcType=INTEGER},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="orderstatus != null" >
        orderstatus = #{orderstatus,jdbcType=INTEGER},
      </if>
      <if test="paymentstatus != null" >
        paymentstatus = #{paymentstatus,jdbcType=INTEGER},
      </if>
      <if test="deliverystatus != null" >
        deliverystatus = #{deliverystatus,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where ordersId = #{ordersid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xtwy.bean.Orders" >
    update orders
    set ordersNum = #{ordersnum,jdbcType=VARCHAR},
      memberId = #{memberid,jdbcType=INTEGER},
      total = #{total,jdbcType=DECIMAL},
      Orderdate = #{orderdate,jdbcType=TIMESTAMP},
      delivery = #{delivery,jdbcType=INTEGER},
      payment = #{payment,jdbcType=INTEGER},
      orderstatus = #{orderstatus,jdbcType=INTEGER},
      paymentstatus = #{paymentstatus,jdbcType=INTEGER},
      deliverystatus = #{deliverystatus,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where ordersId = #{ordersid,jdbcType=INTEGER}
  </update>
</mapper>