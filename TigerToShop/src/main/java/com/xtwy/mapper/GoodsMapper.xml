<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xtwy.mapper.GoodsMapper">
	<resultMap id="BaseResultMap" type="Goods">
		<id column="goodsId" property="goodsId" jdbcType="INTEGER" />
		<result column="goodsName" property="goodsName" jdbcType="VARCHAR" />
		<result column="goodsClsId" property="goodsClsId" jdbcType="INTEGER" />
		<result column="goodsTypeId" property="goodsTypeId" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="DECIMAL" />
		<result column="Stock" property="stock" jdbcType="VARCHAR" />
		<result column="weight" property="weight" jdbcType="DOUBLE" />
		<result column="brandID" property="brandId" jdbcType="INTEGER" />
		<result column="grounding" property="grounding" jdbcType="INTEGER" />
		<result column="createDate" property="createDate" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		goods.goodsId, goodsName, goods.goodsClsId,
		goods.goodsTypeId,
		price,
		Stock,
		weight, brandID,
		grounding,
		createDate
	</sql>
	<!-- 查询一条商品 -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from goods
		where goodsId = #{goodsId,jdbcType=INTEGER}
	</select>
	<!-- 关联类别与类型 -->
	<resultMap type="Goods" extends="BaseResultMap" id="GoodsClassTypeMap">
		<!-- 关联类别表 -->
		<association property="goodsClass" javaType="GoodsClass">
			<result column="goodsClsName" property="goodsClsName"
				jdbcType="VARCHAR" />
		</association>
		<!-- 关联类型表 -->
		<association property="goodsType" javaType="GoodsType">
			<result column="goodsType" property="goodsType" jdbcType="VARCHAR" />
		</association>
	</resultMap>
	<!-- 查询所有商品 -->
	<select id="getGoodsAll" resultMap="GoodsClassTypeMap">
		select
		<include refid="Base_Column_List" />
		,goodsClsName,goodsType.goodsType
		from goods,goodsclass,goodsType
		<where>
			goods.goodsClsId=goodsclass.goodsClsId and
			goods.goodsTypeId=goodsType.goodsTypeId
		</where>
	</select>
	<!-- 条件查询 -->
	<resultMap type="Goods" extends="BaseResultMap" id="WhereResultMap">
		<collection property="goodsPic" ofType="GoodsPic">
			<result column="goodsPath" property="goodsPath" jdbcType="VARCHAR" />
			<result column="isFirst" property="isFirst" jdbcType="INTEGER" />
		</collection>
	</resultMap>
	<!-- 查询楼层商品 -->
	<select id="getFloorGoodsList" parameterType="Goods" resultMap="WhereResultMap">
		SELECT
		<include refid="Base_Column_List" />,goodsPath,isFirst 
		FROM goods,goodspic
		<where>
			and	goods.goodsId=goodspic.goodsId	and isFirst=1
		</where>
	</select>
	<!-- 商品删除 -->
	<delete id="deleteByPrimaryKey" parameterType="Integer[]">
		delete from goods
		<where>
			<if test="array!=null">
				<foreach collection="array" index="index" item="item"
					open=" and goodsId in (" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</delete>
	<!-- 添加记录 -->
	<insert id="insert" parameterType="com.xtwy.bean.Goods">
		insert into goods (goodsId,
		goodsName, goodsClsId,
		goodsTypeId, price, Stock,
		weight, brandID,
		grounding,
		createDate)
		values (#{goodsId,jdbcType=INTEGER},
		#{goodsName,jdbcType=VARCHAR},
		#{goodsClsId,jdbcType=INTEGER},
		#{goodsTypeId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL},
		#{stock,jdbcType=VARCHAR},
		#{weight,jdbcType=DOUBLE},
		#{brandId,jdbcType=INTEGER},
		#{grounding,jdbcType=INTEGER},
		#{createDate,jdbcType=TIMESTAMP})
	</insert>
	<!-- 更新记录 -->
	<update id="updateByPrimaryKey" parameterType="com.xtwy.bean.Goods">
		update goods
		set
		goodsName = #{goodsName,jdbcType=VARCHAR},
		goodsClsId =
		#{goodsClsId,jdbcType=INTEGER},
		goodsTypeId =
		#{goodsTypeId,jdbcType=INTEGER},
		price = #{price,jdbcType=DECIMAL},
		Stock = #{stock,jdbcType=VARCHAR},
		weight = #{weight,jdbcType=DOUBLE},
		brandID = #{brandId,jdbcType=INTEGER},
		grounding =
		#{grounding,jdbcType=INTEGER},
		createDate =
		#{createDate,jdbcType=TIMESTAMP}
		where goodsId =
		#{goodsId,jdbcType=INTEGER}
	</update>
</mapper>